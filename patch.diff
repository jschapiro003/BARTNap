From 340fe1ffc2452da3918b6141b848859059b8685b Mon Sep 17 00:00:00 2001
From: Jonathan Schapiro <jschapir@gmail.com>
Date: Sun, 26 Oct 2014 11:50:43 -0700
Subject: [PATCH] added xml parsing functionality

---
 BartNap/Station.swift        |  41 ++++++++++++++
 BartNap/ViewController.swift | 127 ++++++++++++++++++++++++++++++++++---------
 2 files changed, 142 insertions(+), 26 deletions(-)
 create mode 100644 BartNap/Station.swift

diff --git a/BartNap/Station.swift b/BartNap/Station.swift
new file mode 100644
index 0000000..a3fab4e
--- /dev/null
+++ b/BartNap/Station.swift
@@ -0,0 +1,41 @@
+//
+//  Station.swift
+//  BartNap
+//
+//  Created by Jonathan Schapiro on 10/21/14.
+//  Copyright (c) 2014 Jonathan Schapiro. All rights reserved.
+//
+
+import UIKit
+
+class Station: NSObject {
+    
+    let endPoint:String = "http://api.bart.gov/api/stn.aspx?cmd=stns&key=QALV-U3SB-I56Q-DT35"
+    //properties of a station
+    var name: String?
+    var abbreviation: String?
+    var latitude: String?
+    var longitude: String?
+    
+    //variables used to grab the value of an element in XML
+    
+    
+    var nameFound:Bool?
+    var abbreviationFound:Bool?
+    var latitudeFound:Bool?
+    var longitudeFound:Bool?
+    
+    init(name: String?, abbreviation: String?, latitude: String?, longitude: String?){
+        
+        self.name = name
+        self.abbreviation = abbreviation
+        self.latitude = latitude
+        self.longitude = longitude
+        
+    }
+    
+    func newStation(nameFound:Bool?, abbreviationFound: Bool?, latitudeFound: Bool?, longitudeFound: Bool?, elementName: String){
+        
+        
+    }
+}
diff --git a/BartNap/ViewController.swift b/BartNap/ViewController.swift
index cffb9ea..45127b6 100644
--- a/BartNap/ViewController.swift
+++ b/BartNap/ViewController.swift
@@ -1,4 +1,3 @@
-
 //
 //  ViewController.swift
 //  SwiftXMLParsingDemo
@@ -6,49 +5,125 @@
 
 import UIKit
 
-class ViewController: UIViewController,NSXMLParserDelegate {
-    
-    var strXMLData:String = ""
-    var currentElement:String = ""
-   
+class ViewController: UIViewController, NSXMLParserDelegate {
     
+    let parser = NSXMLParser(contentsOfURL: NSURL(string:"http://api.bart.gov/api/stn.aspx?cmd=stns&key=QALV-U3SB-I56Q-DT35" ))
+    var parseSuccess:Bool = true
+    var stations = Array<Station>()
     
+    //station variables to check an XML Elements value
+    var stationName:Bool?
+    var stationAbbreviation:Bool?
+    var stationLatitude:Bool?
+    var stationLongitude:Bool?
+ 
     override func viewDidLoad() {
         super.viewDidLoad()
+       
+        
+        
+        // we will allow users to enter there origin and destination based on a list of stations 
+        //there answers will give the requirements for a call to the schedule info API
+        //we will pass these values along next view controller, where timer calculations will be done
         
-        var url:String="http://api.androidhive.info/pizza/?format=xml"
-        var urlToSend = NSURL(string: "http://api.bart.gov/api/sched.aspx?cmd=arrive&orig=ASHB&dest=CIVC&date=now&key=QALV-U3SB-I56Q-DT35&b=2&a=2&l=1")
-        // Parse the XML
-        var parser:NSXMLParser = NSXMLParser(contentsOfURL: urlToSend)!
-        parser.delegate = self
         
-        var success:Bool = parser.parse()
         
-        if success {
-            println("parse success!")
-         
-        } else {
-            println("parse failure!")
+        if let xmlParser = parser?{
+
+            xmlParser.delegate = self
+
+                dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_BACKGROUND, 0), {
+                
+                    self.parseSuccess = xmlParser.parse()
+                    for station in self.stations{
+                        if let sn = station.name?{
+                            println("station name:\(sn)")
+                        }
+                        if let sa = station.abbreviation?{
+                            println("station abbreviation \(sa)")
+                        }
+
+                    }
+                
+                })
         }
+        println("no longer in the background")
+        
+       
     }
     
     override func didReceiveMemoryWarning() {
         super.didReceiveMemoryWarning()
         // Dispose of any resources that can be recreated.
     }
+   
+    
     func parser(parser: NSXMLParser!, didStartElement elementName: String!, namespaceURI: String!, qualifiedName qName: String!, attributes attributeDict: NSDictionary!) {
-        //println("Element's name is \(elementName)")
-        //println("Element's attributes are \(attributeDict)")
-        if (elementName == "trip" || elementName == "leg"){
-                println("trip: \(attributeDict)")
-            
-        }
+        //check to see if the staion name element exists
+        self.stationName = (elementName == "name")
+        
+        //check to see if station abbreviation exists
+        self.stationAbbreviation = (elementName == "abbr")
+        
+        //check to see if gtfs latitude exists
+        self.stationLatitude = (elementName == "gtfs_latitude")
+        
+        //check to see if gtfs longitude exists 
+        self.stationLongitude = (elementName == "gtfs_longitude")
+        
         
     }
+    func parser(parser: NSXMLParser, foundCharacters string: String) {
+        
+        //temporary variables to hold the current value of a station property
+        var currentStationName:String?
+        var currentAbbreviationName:String?
+        var currentLatitudeName:String?
+        var currentLongitudeName:String?
+        
+        //grab each station
+        if let stationFound = self.stationName?{
+            if(stationFound){
+                // println("Name:\(string)")
+                currentStationName = string
+            }
+        }
+        
+        //grab each station abbreviation
+        if let abbreviationFound = self.stationAbbreviation?{
+            if (abbreviationFound){
+                //println("Abbrv: \(string)")
+                currentAbbreviationName = string
+            }
+        }
+        
+        //grab each station latitude
+        if let latitudeFound = self.stationLatitude?{
+            if (latitudeFound){
+                //println("latitude: \(string)")
+                currentLatitudeName = string
+            }
+        }
+        
+        //grab each station longitude
+        if let longitudeFound = self.stationLongitude{
+            if (longitudeFound){
+                //println("longitude: \(string)")
+                currentLongitudeName = string
+            }
+        }
 
+        //create new station and populate it
+        
+        var station:Station = Station(name: currentStationName, abbreviation: currentAbbreviationName, latitude: currentLatitudeName, longitude: currentLongitudeName)
+        
+        // add that station to the stations array
+        stations.append(station)
+        
+        
+    }
+    
     func parser(parser: NSXMLParser!, parseErrorOccurred parseError: NSError!) {
         NSLog("failure error: %@", parseError)
     }
-}
-
-
+}
\ No newline at end of file
-- 
1.8.4.2

